plugins {
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'java'
    id 'eclipse'
}

group = 'vaadin.gradle.starter'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'

ext {
	set('springAiVersion', "1.0.0-M2")
}

repositories {
    mavenCentral()
    maven {
        url 'https://maven.vaadin.com/vaadin-addons'
    }
    maven { url 'https://repo.spring.io/milestone' }
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:24.4.12"
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
        mavenBom "org.junit:junit-bom:5.11.0"
    }
}

dependencies {
    implementation 'com.vaadin:vaadin'
    implementation 'com.vaadin:vaadin-spring-boot-starter'
    implementation 'org.parttio:line-awesome:2.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
       
    //implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-azure-openai-spring-boot-starter'
    implementation 'org.springframework.ai:spring-ai-bedrock-ai-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-pgvector-store'
    implementation 'org.springframework.ai:spring-ai-transformers-spring-boot-starter'
    implementation 'org.springframework.ai:spring-ai-pdf-document-reader'    

    runtimeOnly 'com.h2database:h2'

	implementation 'org.apache.pdfbox:pdfbox:3.0.3'

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation 'com.vaadin:vaadin-testbench-junit5'
    
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

springBoot {
    mainClass = 'spring_ai_web_app_example.webapp.Application'
}

bootRun {
    mainClass = 'spring_ai_web_app_example.webapp.Application'
}

bootJar {
    enabled = true
}

jar {
    enabled = false
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
